<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: programming | this blog is under construction ...]]></title>
  <link href="http://zx1986.github.com/blog/categories/programming/atom.xml" rel="self"/>
  <link href="http://zx1986.github.com/"/>
  <updated>2013-03-01T16:18:38+08:00</updated>
  <id>http://zx1986.github.com/</id>
  <author>
    <name><![CDATA[zx1986]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Programming Language]]></title>
    <link href="http://zx1986.github.com/blog/programming-language.html"/>
    <updated>2011-01-01T01:01:00+08:00</updated>
    <id>http://zx1986.github.com/blog/programming-language</id>
    <content type="html"><![CDATA[<p>我想，學習某項領域的知識，先了解其概觀，理解基本元素、專有名詞是很必要的。</p>

<p>例如： <br/>
學習中醫，得先理解「五行」、「陰陽」、「經絡」這些名詞。 <br/>
學習數學，則需要明白「加」、「減」、「乘」、「除」的意義。</p>

<p>而關於電腦科學，必須先初淺的知道硬體與軟體這回事。 <br/>
在眼可見、手可觸的硬體之中，有五感不可及的軟體存在著。</p>

<p>「軟體」可以解釋的範圍很廣。 <br/>
作業系統（Operation System，常見的 Windows、OS X、Ubuntu）是軟體， <br/>
應用程式（Application，包括手機上的 App）是軟體， <br/>
驅動程式（Driver，ATi 或 nVIDIA 的顯示卡驅動）也是軟體， <br/>
腳本檔案（Script，bash、python、php、ruby 等語言寫的檔案）也可以算是軟體。</p>

<blockquote><p>軟體（Software）是一系列按照特定順序組織的電腦數據和指令的集合。 <br/>
一般來講軟體被劃分為系統軟體、應用軟體，和介於這兩者之間的中介軟體。 <br/>
其中系統軟體為電腦使用提供最基本的功能，但是並不針對某一特定應用領域。 <br/>
而應用軟體則恰好相反，不同的應用軟體根據用戶和所服務的領域提供不同的功能。</p></blockquote>

<p>維基百科說的『按照特定順序組織的電腦數據和指令的集合』可以看成就是「程式語言」。</p>

<blockquote><p>程式語言（Programming Language），又稱程式設計語言（Program Design Language）。 <br/>
在過去的幾十年間，大量的程式語言被發明、被取代、被修改或組合在一起。</p></blockquote>

<p>直接從英文字面去看「Programming Language」。 <br/>
Programming 可以解釋成『程式化的』或『可以程式化的』， <br/>
Language 直接理解就可以，就是『語言』。  <br/>
注意，Programming Language 是單數，是一個統稱，底下有許多種不同類型的語言。</p>

<p>就像是英文、日文、俄文，都是人類（human being）溝通用的語言，簡稱語言。 <br/>
如果是鳥類溝通用的語言，或許有孔雀語、鴿子語、信天翁語，可以簡稱爲鳥語。</p>

<p>『程式化的語言』或『可以程式化的語言』，簡稱「程式語言」， <br/>
「程式語言」這個名詞就類似「人類語言」、「鳥類語言」。 <br/>
「程式語言」是人類與電腦（硬體或軟體）溝通的語言。</p>

<p>既然是語言，就有其語法、規則、慣例、特性。 <br/>
像是讀書時死背硬記的英文語法、片語規則、過去式進行式、破刀式破劍式。 <br/>
日文、俄文當然又有其各自的規則與玩法，而且都不盡相同。</p>

<blockquote><p>每一種程式語言可以被看作是一套包含語法、詞彙和含義的正式規範。</p></blockquote>

<p>最原始的、最赤裸裸的程式語言：機械碼（二進位碼）  <br/>
類似 The Martix 中複雜的 0 與 1 的組合，一般人類是無法解讀的（除非你是 Neo）。</p>

<blockquote><p>高階語言的出現使得電腦程式語言不再過度地倚賴某種特定的機器或環境。 <br/>
因為高階語言在不同的平台上會被編譯成不同的機器語言，而不是直接被機器執行。</p></blockquote>

<p>具有程式化規則的語言</p>

<p><i class="icon-book"></i> <br/>
- <a href="http://en.wikipedia.org/wiki/Software">http://en.wikipedia.org/wiki/Software</a> <br/>
- <a href="http://en.wikipedia.org/wiki/Programming_language">http://en.wikipedia.org/wiki/Programming_language</a> <br/>
- <a href="http://en.wikipedia.org/wiki/Traditional_Chinese_medicine">http://en.wikipedia.org/wiki/Traditional_Chinese_medicine</a></p>
]]></content>
  </entry>
  
</feed>
